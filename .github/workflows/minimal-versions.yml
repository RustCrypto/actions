---
name: minimal-versions

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      nightly:
        description: 'rustc (nightly) version used to generate Cargo.lock'
        default: 'nightly'
        required: false
        type: string
      toolchain:
        description: 'rustc version used to perform the build'
        default: 'stable'
        required: false
        type: string
      install-zlint:
        description: 'Install zlint in the PATH'
        default: false
        required: false
        type: boolean
      nightly-cmd:
        type: string
        default: ''
      stable-cmd:
        type: string
        default: >
          cargo test --release --all-features &&
          cargo hack test --release --feature-powerset

jobs:
  minimal-versions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: RustCrypto/actions/cargo-cache@master
      - name: Install zlint
        if: inputs.install-zlint
        uses: RustCrypto/actions/zlint-install@master
        # Use `nightly` to recompute Cargo.lock with -Z minimal-versions
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.nightly }}
      - run: rm ../Cargo.toml
      - run: cargo update -Z minimal-versions
      - run: ${{ inputs.nightly-cmd }}
        # Perform tests
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ inputs.toolchain }}
      - uses: RustCrypto/actions/cargo-hack-install@master
      - run: ${{ inputs.stable-cmd }}
